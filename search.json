[{"path":"https://lcrawlab.github.io/callback/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 recall authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://lcrawlab.github.io/callback/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alan DenAdel. Author, maintainer.","code":""},{"path":"https://lcrawlab.github.io/callback/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"DenAdel (2024). recall: Calibrated clustering artificial variables avoid -clustering single-cell RNA-sequencing. R package version 0.0.0, https://lcrawlab.github.io/recall/.","code":"@Manual{,   title = {recall: Calibrated clustering with artificial variables to avoid over-clustering in single-cell RNA-sequencing},   author = {Alan DenAdel},   year = {2024},   note = {R package version 0.0.0},   url = {https://lcrawlab.github.io/recall/}, }"},{"path":[]},{"path":"https://lcrawlab.github.io/callback/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Calibrated clustering with artificial variables to avoid over-clustering in single-cell RNA-sequencing","text":"Standard single-cell RNA-sequencing (scRNA-seq) pipelines nearly always include unsupervised clustering key step identifying biologically distinct cell types. follow-step pipelines test differential expression identified clusters. algorithms -cluster, downstream analyses produce inflated P-values resulting increased false discoveries. , present recall (Calibrated Clustering Artificial Variables): new method protecting -clustering controlling impact double-dipping. Importantly, approach can applied clustering algorithm (implemented Louvain, Leiden, K-means, hierarchical clustering algorithms). recall provides state---art clustering performance can rapidly analyze large-scale scRNA-seq studies, even personal laptop.","code":""},{"path":"https://lcrawlab.github.io/callback/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calibrated clustering with artificial variables to avoid over-clustering in single-cell RNA-sequencing","text":"can install lastest development version using devtools library. install package devtools, use command: Although explicitly dependency, making sure presto installed make recall much faster.","code":"devtools::install_github(\"lcrawlab/recall\") devtools::install_github(\"immunogenomics/presto\")"},{"path":"https://lcrawlab.github.io/callback/index.html","id":"tutorial","dir":"","previous_headings":"","what":"Tutorial","title":"Calibrated clustering with artificial variables to avoid over-clustering in single-cell RNA-sequencing","text":"","code":"library(Seurat) library(SeuratData)  library(recall)  set.seed(123)  # load pbmc3k dataset SeuratData::InstallData(\"pbmc3k\") data(\"pbmc3k\")  pbmc3k <- UpdateSeuratObject(pbmc3k)  pbmc3k <- NormalizeData(pbmc3k) pbmc3k <- FindVariableFeatures(pbmc3k) pbmc3k <- ScaleData(pbmc3k) pbmc3k <- RunPCA(pbmc3k) pbmc3k <- FindNeighbors(pbmc3k) pbmc3k <- RunUMAP(pbmc3k, dims = 1:10)  pbmc_default <- FindClusters(pbmc3k) pbmc_recall <- FindClustersRecall(pbmc3k)  DimPlot(pbmc_default) + DimPlot(pbmc_recall)"},{"path":"https://lcrawlab.github.io/callback/index.html","id":"overview-of-the-method","dir":"","previous_headings":"","what":"Overview of the Method","title":"Calibrated clustering with artificial variables to avoid over-clustering in single-cell RNA-sequencing","text":"recall algorithm consists three simple steps: First, generate synthetic null variables, inspired knockoff variables (Barber Candès,2015) , augment single-cell data analyzed “fake” genes known contribute unique cell type. Second, perform preprocessing clustering augmented dataset. Third, calibrate number inferred clusters using hypothesis testing strategy data-dependent threshold determine statistically significant difference groups. pair groups statistically significant differences re-clustering occurs. synthetic genes act negative control variables; go analytic steps real data presented opportunity identified marker genes. recall algorithm uses guiding principle well-calibrated clusters (.e., representing real groups) significantly differentially expressed genes correcting multiple hypothesis tests, -clustered groups . use rule iteratively re-cluster cells inferred clusters well-calibrated observed differences expression groups due effects double-dipping.","code":""},{"path":"https://lcrawlab.github.io/callback/index.html","id":"relevant-citations","dir":"","previous_headings":"","what":"Relevant Citations","title":"Calibrated clustering with artificial variables to avoid over-clustering in single-cell RNA-sequencing","text":"recall currently bioRxiv, . . DenAdel, M. Ramseier, . Navia, . Shalek, S. Raghavan, P. Winter, . Amini, L. Crawford. knockoff calibration method avoid -clustering single-cell RNA-sequencing. bioRxiv.","code":""},{"path":"https://lcrawlab.github.io/callback/index.html","id":"questions-and-feedback","dir":"","previous_headings":"","what":"Questions and Feedback","title":"Calibrated clustering with artificial variables to avoid over-clustering in single-cell RNA-sequencing","text":"questions concerns recall, please contact Alan DenAdel Lorin Crawford. feedback software, manuscript, tutorials appreciated.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/FindClustersCountsplit.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs a typical Seurat workflow on a Seurat object (up to dimensionality reduction and clustering). — FindClustersCountsplit","title":"Runs a typical Seurat workflow on a Seurat object (up to dimensionality reduction and clustering). — FindClustersCountsplit","text":"Given Seurat object, returns new Seurat normalized, variable features identified, scaled, principal components computed, hadclusters identified, tSNE UMAP embeddings determined.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/FindClustersCountsplit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs a typical Seurat workflow on a Seurat object (up to dimensionality reduction and clustering). — FindClustersCountsplit","text":"","code":"FindClustersCountsplit(   seurat_obj,   resolution_start = 0.8,   reduction_percentage = 0.2,   num_clusters_start = 20,   dims = 1:10,   algorithm = \"louvain\",   null_method = \"ZIP\",   assay = \"RNA\",   cores = 1,   shared_memory_max = 8000 * 1024^2,   verbose = TRUE )"},{"path":"https://lcrawlab.github.io/callback/reference/FindClustersCountsplit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs a typical Seurat workflow on a Seurat object (up to dimensionality reduction and clustering). — FindClustersCountsplit","text":"seurat_obj Seurat object analyzed. resolution_start starting resolution used clustering algorithm (Louvain Leiden algorithms). reduction_percentage amount starting parameter reduced iteration (0 1). num_clusters_start starting number clusters used clustering algorithm (K-means Hierarchical clustering algorithms). dims dimensions use input features (.e. 1:10). algorithm clustering algorithm used. null_method generating distribution synthetic null variables (ZIP, NB, ZIP-copula, NB-copula) assay assay generate artificial variables . cores number cores compute marker genes parallel. shared_memory_max maximum size shared global variables. Increased variable see following error: total size X globals need exported future expression ('FUN()') X GiB. exceeds maximum allowed size 500.00 MiB (option 'future.globals.maxSize'). X largest globals ... verbose Whether show logging.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/FindClustersCountsplit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs a typical Seurat workflow on a Seurat object (up to dimensionality reduction and clustering). — FindClustersCountsplit","text":"Returns Seurat object idents updated clusters determined via countsplit algorithm. Latest clustering results stored object metadata countsplit_clusters'. Note 'countsplit_clusters' overwritten ever time FindClustersCountsplit run.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/FindClustersRecall.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs a typical Seurat workflow on a Seurat object (up to dimensionality reduction and clustering). — FindClustersRecall","title":"Runs a typical Seurat workflow on a Seurat object (up to dimensionality reduction and clustering). — FindClustersRecall","text":"Given Seurat object, returns new Seurat normalized, variable features identified, scaled, principal components computed, hadclusters identified, tSNE UMAP embeddings determined.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/FindClustersRecall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs a typical Seurat workflow on a Seurat object (up to dimensionality reduction and clustering). — FindClustersRecall","text":"","code":"FindClustersRecall(   seurat_obj,   resolution_start = 0.8,   reduction_percentage = 0.2,   num_clusters_start = 20,   dims = 1:10,   algorithm = \"louvain\",   null_method = \"ZIP\",   assay = \"RNA\",   cores = 1,   shared_memory_max = 8000 * 1024^2,   verbose = TRUE )"},{"path":"https://lcrawlab.github.io/callback/reference/FindClustersRecall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs a typical Seurat workflow on a Seurat object (up to dimensionality reduction and clustering). — FindClustersRecall","text":"seurat_obj Seurat object analyzed. resolution_start starting resolution used clustering algorithm (Louvain Leiden algorithms). reduction_percentage amount starting parameter reduced iteration (0 1). num_clusters_start starting number clusters used clustering algorithm (K-means Hierarchical clustering algorithms). dims dimensions use input features (.e. 1:10). algorithm clustering algorithm used. null_method generating distribution synthetic null variables (ZIP, NB, ZIP-copula, NB-copula) assay assay generate artificial variables . cores number cores compute marker genes parallel. shared_memory_max maximum size shared global variables. Increased variable see following error: total size X globals need exported future expression ('FUN()') X GiB. exceeds maximum allowed size 500.00 MiB (option 'future.globals.maxSize'). X largest globals ... verbose Whether show logging.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/FindClustersRecall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs a typical Seurat workflow on a Seurat object (up to dimensionality reduction and clustering). — FindClustersRecall","text":"Returns Seurat object idents updated clusters determined via recall algorithm. Latest clustering results stored object metadata recall_clusters'. Note 'recall_clusters' overwritten ever time FindClustersRecall run.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/compute_knockoff_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the genes selected by the knockoff filter — compute_knockoff_filter","title":"Returns the genes selected by the knockoff filter — compute_knockoff_filter","text":"Given two Seurat objects, returns  genes selected knockoff filter W statistics.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/compute_knockoff_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the genes selected by the knockoff filter — compute_knockoff_filter","text":"","code":"compute_knockoff_filter(   seurat_obj,   cluster1,   cluster2,   q,   return_all = FALSE,   num_cores = 1,   shared_memory_max )"},{"path":"https://lcrawlab.github.io/callback/reference/compute_knockoff_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the genes selected by the knockoff filter — compute_knockoff_filter","text":"seurat_obj Seurat object cluster1 Idents cluster interest seurat_obj1 cluster2 Idents cluster interest seurat_obj2 q desired rate control FDR return_all Determines returned object contain genes just selected genes. num_cores number cores computing marker genes parallel. shared_memory_max maximum size shared global variables.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/compute_knockoff_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the genes selected by the knockoff filter — compute_knockoff_filter","text":"todo","code":""},{"path":"https://lcrawlab.github.io/callback/reference/estimate_negative_binomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum likelihood estimation for the negative binomial distribution. — estimate_negative_binomial","title":"Maximum likelihood estimation for the negative binomial distribution. — estimate_negative_binomial","text":"Given data, computes maximum likelihood estimators negative binomial distribution parameters: size mu.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/estimate_negative_binomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum likelihood estimation for the negative binomial distribution. — estimate_negative_binomial","text":"","code":"estimate_negative_binomial(data, verbose = FALSE)"},{"path":"https://lcrawlab.github.io/callback/reference/estimate_negative_binomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum likelihood estimation for the negative binomial distribution. — estimate_negative_binomial","text":"data data estimate parameters . verbose Whether show logging.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/estimate_negative_binomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum likelihood estimation for the negative binomial distribution. — estimate_negative_binomial","text":"Maximum likelihood estimators size mu negative binomial distribution","code":""},{"path":"https://lcrawlab.github.io/callback/reference/estimate_negative_binomial_copula.html","id":null,"dir":"Reference","previous_headings":"","what":"todo — estimate_negative_binomial_copula","title":"todo — estimate_negative_binomial_copula","text":"Given data, computes todo Given data, computes todo Given data, computes todo Given data, computes todo","code":""},{"path":"https://lcrawlab.github.io/callback/reference/estimate_negative_binomial_copula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"todo — estimate_negative_binomial_copula","text":"","code":"estimate_zi_poisson_copula(data_matrix, cores)  estimate_negative_binomial_copula(data_matrix, cores)  estimate_poisson_copula(data_matrix, cores)  estimate_gaussian_copula(data_matrix, cores)"},{"path":"https://lcrawlab.github.io/callback/reference/estimate_negative_binomial_copula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"todo — estimate_negative_binomial_copula","text":"data_matrix data estimate parameters . cores number CPU cores use estimation scDesign3.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/estimate_negative_binomial_copula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"todo — estimate_negative_binomial_copula","text":"todo todo todo todo","code":""},{"path":"https://lcrawlab.github.io/callback/reference/estimate_zi_poisson.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum likelihood estimation for the zero-inflated Poisson distribution with Poisson parameter lambda and zero proportion prop.zero. — estimate_zi_poisson","title":"Maximum likelihood estimation for the zero-inflated Poisson distribution with Poisson parameter lambda and zero proportion prop.zero. — estimate_zi_poisson","text":"Given data, computes maximum likelihood estimators zero-inflated Poisson distribution.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/estimate_zi_poisson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum likelihood estimation for the zero-inflated Poisson distribution with Poisson parameter lambda and zero proportion prop.zero. — estimate_zi_poisson","text":"","code":"estimate_zi_poisson(data)"},{"path":"https://lcrawlab.github.io/callback/reference/estimate_zi_poisson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum likelihood estimation for the zero-inflated Poisson distribution with Poisson parameter lambda and zero proportion prop.zero. — estimate_zi_poisson","text":"data data estimate parameters .","code":""},{"path":"https://lcrawlab.github.io/callback/reference/estimate_zi_poisson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum likelihood estimation for the zero-inflated Poisson distribution with Poisson parameter lambda and zero proportion prop.zero. — estimate_zi_poisson","text":"Maximum likelihood estimators zero-inflated Poisson distribution","code":""},{"path":"https://lcrawlab.github.io/callback/reference/get_seurat_obj_with_artificial_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a Seurat object that contains additional (fake) RNA expression counts. — get_seurat_obj_with_artificial_variables","title":"Returns a Seurat object that contains additional (fake) RNA expression counts. — get_seurat_obj_with_artificial_variables","text":"Given Seurat object, returns new Seurat object whose RNA expression counts includes variable features original object equal number artificial features.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/get_seurat_obj_with_artificial_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a Seurat object that contains additional (fake) RNA expression counts. — get_seurat_obj_with_artificial_variables","text":"","code":"get_seurat_obj_with_artificial_variables(   seurat_obj,   assay = \"RNA\",   null_method = \"ZIP\",   verbose = TRUE,   cores )"},{"path":"https://lcrawlab.github.io/callback/reference/get_seurat_obj_with_artificial_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a Seurat object that contains additional (fake) RNA expression counts. — get_seurat_obj_with_artificial_variables","text":"seurat_obj Seurat object containing RNA expression counts. assay assay generate artificial variables . null_method generating distribution synthetic null variables (ZIP, NB, ZIP-copula, NB-copula) verbose Whether show logging. cores number cores use generating synthetic null variables.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/get_seurat_obj_with_artificial_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a Seurat object that contains additional (fake) RNA expression counts. — get_seurat_obj_with_artificial_variables","text":"Seurat object contains original variable features equal number artificial features.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/rzipoisson.html","id":null,"dir":"Reference","previous_headings":"","what":"Random data generation for the zero-infalted Poisson distribution with Poisson parameter lambda and zero proportion prop.zero. — rzipoisson","title":"Random data generation for the zero-infalted Poisson distribution with Poisson parameter lambda and zero proportion prop.zero. — rzipoisson","text":"Given number samples desired, Poisson parameter, lambda, zero proportion, prop.zero, simulates number desired samples ZIP(lambda, prop.zero).","code":""},{"path":"https://lcrawlab.github.io/callback/reference/rzipoisson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random data generation for the zero-infalted Poisson distribution with Poisson parameter lambda and zero proportion prop.zero. — rzipoisson","text":"","code":"rzipoisson(n, lambda, prop.zero)"},{"path":"https://lcrawlab.github.io/callback/reference/rzipoisson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random data generation for the zero-infalted Poisson distribution with Poisson parameter lambda and zero proportion prop.zero. — rzipoisson","text":"n number samples simulated. lambda Poisson rate parameter. prop.zero proportion excess zeroes.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/rzipoisson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random data generation for the zero-infalted Poisson distribution with Poisson parameter lambda and zero proportion prop.zero. — rzipoisson","text":"Simulated data ZIP(lambda, prop.zero).","code":""},{"path":"https://lcrawlab.github.io/callback/reference/seurat_workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs a typical Seurat workflow on a Seurat object (up to dimensionality reduction and clustering). — seurat_workflow","title":"Runs a typical Seurat workflow on a Seurat object (up to dimensionality reduction and clustering). — seurat_workflow","text":"Given Seurat object, returns new Seurat normalized, variable features identified, scaled, principal components computed, clusters identified, tSNE UMAP embeddings determined.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/seurat_workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs a typical Seurat workflow on a Seurat object (up to dimensionality reduction and clustering). — seurat_workflow","text":"","code":"seurat_workflow(   seurat_obj,   num_variable_features,   resolution_param = 0.8,   visualization_method = \"umap\",   num_dims = 10,   algorithm = \"louvain\" )"},{"path":"https://lcrawlab.github.io/callback/reference/seurat_workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs a typical Seurat workflow on a Seurat object (up to dimensionality reduction and clustering). — seurat_workflow","text":"seurat_obj Seurat object analyzed. num_variable_features number variable features use analysis. resolution_param resolution parameter use clustering. visualization_method Either \"umap\" \"tsne\". num_dims number principal components use. algorithm clustering algorithm use, either \"louvain\" \"leiden\".","code":""},{"path":"https://lcrawlab.github.io/callback/reference/seurat_workflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs a typical Seurat workflow on a Seurat object (up to dimensionality reduction and clustering). — seurat_workflow","text":"Seurat object containing relevant analysis results.","code":""}]
